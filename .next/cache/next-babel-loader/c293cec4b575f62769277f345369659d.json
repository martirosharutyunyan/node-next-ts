{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect, memo } from \"react\";\nimport axios from \"axios\"; //types\n\nimport { useHistory } from 'react-router-dom';\n\nvar Container1 = function Container1() {\n  _s();\n\n  var history = useHistory();\n\n  var getUsers = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var postToBack;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.post(\"/getUsers\");\n\n            case 2:\n              postToBack = _context.sent;\n              setarr(postToBack.data);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getUsers() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var _useState = useState({\n    name: \"Martiros\",\n    surname: \"Harutunyan\",\n    email: \"harutunyan.martiros@mail.ru\",\n    password: \"hhs13516\",\n    confirmPassword: \"hhs13516\",\n    loginEmail: \"harutunyan.martiros@mail.ru\",\n    loginPassword: \"hhs13516\",\n    verificationCode: \"\"\n  }),\n      state = _useState[0],\n      setstate = _useState[1];\n\n  var _useState2 = useState([]),\n      arr = _useState2[0],\n      setarr = _useState2[1];\n\n  var _useState3 = useState(true),\n      load = _useState3[0],\n      setload = _useState3[1];\n\n  var _useState4 = useState(true),\n      counter = _useState4[0],\n      setcounter = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      message = _useState5[0],\n      setmessage = _useState5[1];\n\n  var _useState6 = useState(\"\"),\n      token = _useState6[0],\n      settoken = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      userId = _useState7[0],\n      setuserId = _useState7[1];\n\n  var _useState8 = useState(true),\n      verify = _useState8[0],\n      setverify = _useState8[1];\n\n  var _useState9 = useState(''),\n      code = _useState9[0],\n      setcode = _useState9[1];\n\n  var autoLogin = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var postToBack;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(localStorage.getItem(\"secret\") !== null)) {\n                _context2.next = 4;\n                break;\n              }\n\n              _context2.next = 3;\n              return axios.post(\"/autoLogin\", {\n                token: localStorage.getItem(\"secret\")\n              });\n\n            case 3:\n              postToBack = _context2.sent;\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function autoLogin() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    autoLogin();\n  }, []);\n  useEffect(function () {\n    getUsers();\n  }, [load]);\n\n  var changeValue = function changeValue(e) {\n    // setstate((prev:objectType):objectType=>{\n    //     return {\n    //         ...prev,\n    //         [e.target.id]:e.target.value\n    //     }\n    // })\n    // parzel te inchi chi ashxatum es verevi dzevy\n    setstate(_objectSpread(_objectSpread({}, state), {}, _defineProperty({}, e.target.id, e.target.value)));\n  };\n\n  var clear = function clear() {\n    setstate({\n      name: \"\",\n      surname: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      loginEmail: \"harutunyan.martiros@mail.ru\",\n      loginPassword: \"hhs13516\",\n      verificationCode: \"\"\n    });\n    setverify(true);\n  };\n\n  var deleteUser = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(elem) {\n      var postToBack;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return setload(false);\n\n            case 2:\n              _context3.next = 4;\n              return axios.post(\"/deleteUser\", elem);\n\n            case 4:\n              postToBack = _context3.sent;\n              _context3.next = 7;\n              return setload(true);\n\n            case 7:\n              setmessage(postToBack.data.message);\n              setTimeout(function () {\n                setmessage(\"\");\n              }, 2000);\n\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function deleteUser(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var Registration = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var postToBack;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return setload(false);\n\n            case 3:\n              _context4.next = 5;\n              return axios.post(\"/api/auth/registr\", {\n                name: state.name,\n                surname: state.surname,\n                email: state.email,\n                password: state.password\n              });\n\n            case 5:\n              postToBack = _context4.sent;\n              _context4.next = 8;\n              return setload(true);\n\n            case 8:\n              if (postToBack.data.message === 'already exists') {\n                setmessage(postToBack.data.message);\n                setTimeout(function () {\n                  setmessage(\"\");\n                }, 2000);\n              } else {\n                setverify(false);\n                setcode(postToBack.data.code);\n              }\n\n              _context4.next = 14;\n              break;\n\n            case 11:\n              _context4.prev = 11;\n              _context4.t0 = _context4[\"catch\"](0);\n              console.log(_context4.t0);\n\n            case 14:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 11]]);\n    }));\n\n    return function Registration() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var loginPost = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      var postToBack;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return setload(false);\n\n            case 2:\n              _context5.next = 4;\n              return axios.post(\"/api/auth/login\", {\n                loginEmail: state.loginEmail,\n                loginPassword: state.loginPassword\n              });\n\n            case 4:\n              postToBack = _context5.sent;\n              console.log(postToBack.data);\n\n              if (!(postToBack.data.message === \"password is incorect try again\")) {\n                _context5.next = 10;\n                break;\n              }\n\n              console.log(\"password is incorect try again\");\n              _context5.next = 17;\n              break;\n\n            case 10:\n              if (!(postToBack.data.message === \"sorry your login or email are not right\")) {\n                _context5.next = 14;\n                break;\n              }\n\n              console.log(\"sorry your login or email are not right\");\n              _context5.next = 17;\n              break;\n\n            case 14:\n              localStorage.setItem(\"secret\", JSON.stringify({\n                token: postToBack.data.token,\n                userId: postToBack.data.userEmail._id\n              }, null, 2));\n              _context5.next = 17;\n              return history.push(\"/user/\".concat(postToBack.data.userEmail.name));\n\n            case 17:\n              _context5.next = 19;\n              return setload(true);\n\n            case 19:\n              setTimeout(function () {\n                setmessage(\"\");\n              }, 1000);\n\n            case 20:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function loginPost() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var verificate = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n      var postToBack;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              setload(false);\n              _context6.next = 3;\n              return axios.post(\"/api/auth/save\", {\n                name: state.name,\n                surname: state.surname,\n                email: state.email,\n                password: state.password,\n                verificationCode: state.verificationCode,\n                code: code\n              });\n\n            case 3:\n              postToBack = _context6.sent;\n\n              if (postToBack.data.message === 'User saved') {\n                setmessage(postToBack.data.message);\n                setcounter(true);\n                setverify(!verify);\n                setstate(_objectSpread(_objectSpread({}, state), {}, {\n                  verificationCode: ''\n                }));\n              } else {\n                setmessage(postToBack.data.message);\n                setTimeout(function () {\n                  setmessage(\"\");\n                }, 2000);\n              }\n\n              setload(true);\n\n            case 6:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function verificate() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  if (!load) {\n    return /*#__PURE__*/_jsx(_Fragment, {\n      children: /*#__PURE__*/_jsx(\"div\", {\n        className: \"loaderReact\",\n        children: /*#__PURE__*/_jsx(\"div\", {\n          className: \"spinner-border text-primary\",\n          style: {\n            width: \"500px\",\n            height: \"500px\"\n          },\n          role: \"status\",\n          children: /*#__PURE__*/_jsx(\"span\", {\n            className: \"sr-only\",\n            children: \"Loading...\"\n          })\n        })\n      })\n    });\n  }\n\n  var verification = /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(\"input\", {\n      type: \"text\",\n      onChange: changeValue,\n      value: state.verificationCode,\n      id: \"verificationCode\"\n    }), /*#__PURE__*/_jsx(\"button\", {\n      onClick: verificate,\n      children: \"click for verification\"\n    })]\n  });\n\n  var registracia = /*#__PURE__*/_jsxs(\"div\", {\n    className: \"registracia\",\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      style: {\n        fontSize: \"2vw\"\n      },\n      children: \"Registracia\"\n    }), /*#__PURE__*/_jsx(\"input\", {\n      onChange: changeValue,\n      value: state.name,\n      placeholder: \"name\",\n      type: \"text\",\n      id: \"name\"\n    }), /*#__PURE__*/_jsx(\"input\", {\n      onChange: changeValue,\n      value: state.surname,\n      placeholder: \"surname\",\n      type: \"text\",\n      id: \"surname\"\n    }), /*#__PURE__*/_jsx(\"input\", {\n      onChange: changeValue,\n      value: state.email,\n      placeholder: \"email\",\n      type: \"text\",\n      id: \"email\"\n    }), /*#__PURE__*/_jsx(\"input\", {\n      onChange: changeValue,\n      value: state.password,\n      placeholder: \"password\",\n      type: \"password\",\n      id: \"password\"\n    }), /*#__PURE__*/_jsx(\"input\", {\n      onChange: changeValue,\n      value: state.confirmPassword,\n      placeholder: \"confirm Password\",\n      type: \"password\",\n      id: \"confirmPassword\"\n    }), /*#__PURE__*/_jsx(\"button\", {\n      onClick: Registration,\n      disabled: state.name.trim() && state.surname.trim() && state.email.trim() && state.password.trim() && state.confirmPassword.trim() && state.confirmPassword === state.password && state.password.length >= 8 && state.confirmPassword.length >= 8 ? false : true,\n      children: \"click\"\n    }), verify ? null : verification, /*#__PURE__*/_jsx(\"button\", {\n      onClick: clear,\n      children: \"clear\"\n    })]\n  });\n\n  var login = /*#__PURE__*/_jsxs(\"div\", {\n    className: \"login\",\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      style: {\n        fontSize: \"2vw\"\n      },\n      children: \"Login\"\n    }), /*#__PURE__*/_jsx(\"input\", {\n      value: state.loginEmail,\n      onChange: changeValue,\n      placeholder: \"email\",\n      id: \"loginEmail\",\n      type: \"text\"\n    }), /*#__PURE__*/_jsx(\"input\", {\n      value: state.loginPassword,\n      onChange: changeValue,\n      placeholder: \"password\",\n      id: \"loginPassword\",\n      type: \"text\"\n    }), /*#__PURE__*/_jsx(\"button\", {\n      onClick: loginPost,\n      children: \"click\"\n    })]\n  });\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: \"div\",\n      children: [/*#__PURE__*/_jsx(\"p\", {\n        onClick: function onClick() {\n          return setcounter(!counter);\n        },\n        children: counter ? \"go to registracia\" : \"go to login\"\n      }), counter ? login : registracia, arr.map(function (elem, i) {\n        return /*#__PURE__*/_jsxs(\"div\", {\n          children: [/*#__PURE__*/_jsx(\"p\", {\n            children: elem.email\n          }), /*#__PURE__*/_jsx(\"p\", {\n            children: elem.password\n          }), /*#__PURE__*/_jsx(\"button\", {\n            onClick: deleteUser.bind(null, elem),\n            children: \"delete\"\n          })]\n        }, elem.id);\n      })]\n    }), /*#__PURE__*/_jsx(\"p\", {\n      children: message\n    })]\n  });\n};\n\n_s(Container1, \"YX0suKoEYvbNmp6tFtn97wW95Gk=\", false, function () {\n  return [useHistory];\n});\n\n_c = Container1;\nexport default Container1 = /*#__PURE__*/memo(Container1);\n\nvar _c;\n\n$RefreshReg$(_c, \"Container1\");","map":{"version":3,"sources":["C:/Users/Martiros/Desktop/node-next-ts/server/pages/auth.tsx"],"names":["React","useState","useEffect","memo","axios","useHistory","Container1","history","getUsers","post","postToBack","setarr","data","name","surname","email","password","confirmPassword","loginEmail","loginPassword","verificationCode","state","setstate","arr","load","setload","counter","setcounter","message","setmessage","token","settoken","userId","setuserId","verify","setverify","code","setcode","autoLogin","localStorage","getItem","changeValue","e","target","id","value","clear","deleteUser","elem","setTimeout","Registration","console","log","loginPost","setItem","JSON","stringify","userEmail","_id","push","verificate","width","height","verification","registracia","fontSize","trim","length","login","map","i","bind"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useMemo, useRef, memo, FC } from \"react\";\r\nimport axios from \"axios\";\r\n//types\r\nimport {\r\n    input,\r\n    axiosType,\r\n    userDataType,\r\n    stateType,\r\n} from \"../types/types\";\r\nimport { useHistory } from 'react-router-dom';\r\nlet Container1: FC = () => {\r\n    const history = useHistory();\r\n    const getUsers = async (): Promise<void> => {\r\n        let postToBack: axiosType = await axios.post(\"/getUsers\");\r\n        setarr(postToBack.data);\r\n    };\r\n\r\n    const [state, setstate] = useState<stateType>({\r\n        name: \"Martiros\",\r\n        surname: \"Harutunyan\",\r\n        email: \"harutunyan.martiros@mail.ru\",\r\n        password: \"hhs13516\",\r\n        confirmPassword: \"hhs13516\",\r\n        loginEmail: \"harutunyan.martiros@mail.ru\",\r\n        loginPassword: \"hhs13516\",\r\n        verificationCode: \"\",\r\n    });\r\n    const [arr, setarr] = useState<userDataType[]>([]);\r\n    const [load, setload] = useState<boolean>(true);\r\n    const [counter, setcounter] = useState<boolean>(true);\r\n    const [message, setmessage] = useState<string>(\"\");\r\n    const [token, settoken] = useState<string>(\"\");\r\n    const [userId, setuserId] = useState<string>(\"\");\r\n    const [verify, setverify] = useState<boolean>(true);\r\n    const [code, setcode] = useState<string>('');\r\n    const autoLogin = async (): Promise<void> => {\r\n        if (localStorage.getItem(\"secret\") !== null) {\r\n            let postToBack = await axios.post(\"/autoLogin\", {\r\n                token: localStorage.getItem(\"secret\"),\r\n            });\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        autoLogin();\r\n    }, []);\r\n    useEffect((): void => {\r\n        getUsers();\r\n    }, [load]);\r\n    const changeValue = (e: input): void => {\r\n        // setstate((prev:objectType):objectType=>{\r\n        //     return {\r\n        //         ...prev,\r\n        //         [e.target.id]:e.target.value\r\n        //     }\r\n        // })\r\n        // parzel te inchi chi ashxatum es verevi dzevy\r\n        setstate({ ...state, [e.target.id]: e.target.value });\r\n    };\r\n    const clear = ():void => {\r\n        setstate({\r\n            name: \"\",\r\n            surname: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            confirmPassword: \"\",\r\n            loginEmail: \"harutunyan.martiros@mail.ru\",\r\n            loginPassword: \"hhs13516\",\r\n            verificationCode: \"\",   \r\n        })\r\n        setverify(true)\r\n    }\r\n    const deleteUser = async (elem: userDataType): Promise<void> => {\r\n        await setload(false);\r\n        let postToBack: axiosType = await axios.post(\"/deleteUser\", elem);\r\n        await setload(true);\r\n        setmessage(postToBack.data.message);\r\n        setTimeout(() => {\r\n            setmessage(\"\");\r\n        }, 2000);\r\n    };\r\n\r\n    const Registration = async (): Promise<void> => {\r\n        try {\r\n            await setload(false);\r\n            let postToBack: axiosType = await axios.post(\"/api/auth/registr\", {\r\n                name: state.name,\r\n                surname: state.surname,\r\n                email: state.email,\r\n                password: state.password,\r\n            });\r\n            await setload(true);\r\n            if(postToBack.data.message === 'already exists'){\r\n                setmessage(postToBack.data.message);\r\n                setTimeout(() => {\r\n                    setmessage(\"\");\r\n                }, 2000);\r\n            } else {\r\n                setverify(false);\r\n                setcode(postToBack.data.code)\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n    const loginPost = async (): Promise<void> => {\r\n        await setload(false);\r\n        let postToBack = await axios.post(\"/api/auth/login\", {\r\n            loginEmail: state.loginEmail,\r\n            loginPassword: state.loginPassword,\r\n        });\r\n        console.log(postToBack.data)\r\n        if (postToBack.data.message === \"password is incorect try again\") {\r\n            console.log(\"password is incorect try again\");\r\n        } else if (\r\n            postToBack.data.message ===\r\n            \"sorry your login or email are not right\"\r\n        ) {\r\n            console.log(\"sorry your login or email are not right\");\r\n        } else {\r\n            localStorage.setItem(\r\n                \"secret\",\r\n                JSON.stringify(\r\n                    {\r\n                        token: postToBack.data.token,\r\n                        userId: postToBack.data.userEmail._id,\r\n                    },\r\n                    null,\r\n                    2,\r\n                ),\r\n            );\r\n            await history.push(`/user/${postToBack.data.userEmail.name}`);\r\n        }\r\n        await setload(true);\r\n        setTimeout(() => {\r\n            setmessage(\"\");\r\n        }, 1000);\r\n    };\r\n    const verificate = async (): Promise<void> => {\r\n        setload(false)\r\n        let postToBack = await axios.post(\"/api/auth/save\", {\r\n            name: state.name,\r\n            surname: state.surname,\r\n            email: state.email,\r\n            password: state.password,\r\n            verificationCode: state.verificationCode,\r\n            code,\r\n        });\r\n        if(postToBack.data.message === 'User saved'){\r\n            setmessage(postToBack.data.message)\r\n            setcounter(true)\r\n            setverify(!verify)\r\n            setstate({...state,verificationCode:''})\r\n        } else{\r\n            setmessage(postToBack.data.message)\r\n            setTimeout(() => {\r\n                setmessage(\"\");\r\n            }, 2000);\r\n        }\r\n        setload(true)\r\n    };\r\n    if (!load) {\r\n        return (\r\n            <>\r\n                <div className=\"loaderReact\">\r\n                    <div\r\n                        className=\"spinner-border text-primary\"\r\n                        style={{ width: \"500px\", height: \"500px\" }}\r\n                        role=\"status\"\r\n                    >\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n    const verification = (\r\n        <>\r\n            <input\r\n                type=\"text\"\r\n                onChange={changeValue}\r\n                value={state.verificationCode}\r\n                id=\"verificationCode\"\r\n            />\r\n            <button onClick={verificate}>click for verification</button>\r\n        </>\r\n    );\r\n    const registracia = (\r\n        <div className=\"registracia\">\r\n            <div style={{ fontSize: \"2vw\" }}>Registracia</div>\r\n            <input\r\n                onChange={changeValue}\r\n                value={state.name}\r\n                placeholder=\"name\"\r\n                type=\"text\"\r\n                id=\"name\"\r\n            />\r\n            <input\r\n                onChange={changeValue}\r\n                value={state.surname}\r\n                placeholder=\"surname\"\r\n                type=\"text\"\r\n                id=\"surname\"\r\n            />\r\n            <input\r\n                onChange={changeValue}\r\n                value={state.email}\r\n                placeholder=\"email\"\r\n                type=\"text\"\r\n                id=\"email\"\r\n            />\r\n            <input\r\n                onChange={changeValue}\r\n                value={state.password}\r\n                placeholder=\"password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n            />\r\n            <input\r\n                onChange={changeValue}\r\n                value={state.confirmPassword}\r\n                placeholder=\"confirm Password\"\r\n                type=\"password\"\r\n                id=\"confirmPassword\"\r\n            />\r\n            <button\r\n                onClick={Registration}\r\n                disabled={\r\n                    state.name.trim() &&\r\n                    state.surname.trim() &&\r\n                    state.email.trim() &&\r\n                    state.password.trim() &&\r\n                    state.confirmPassword.trim() &&\r\n                    state.confirmPassword === state.password &&\r\n                    state.password.length >= 8 &&\r\n                    state.confirmPassword.length >= 8\r\n                        ? false\r\n                        : true\r\n                }\r\n            >\r\n                click\r\n            </button>\r\n            {verify ? null : verification}\r\n            <button onClick={clear}>clear</button>\r\n        </div>\r\n    );\r\n\r\n    const login = (\r\n        <div className=\"login\">\r\n            <div style={{ fontSize: \"2vw\" }}>Login</div>\r\n            <input\r\n                value={state.loginEmail}\r\n                onChange={changeValue}\r\n                placeholder=\"email\"\r\n                id=\"loginEmail\"\r\n                type=\"text\"\r\n            />\r\n            <input\r\n                value={state.loginPassword}\r\n                onChange={changeValue}\r\n                placeholder=\"password\"\r\n                id=\"loginPassword\"\r\n                type=\"text\"\r\n            />\r\n            <button onClick={loginPost}>click</button>\r\n        </div>\r\n    );\r\n    return (\r\n        <>\r\n            <div className=\"div\">\r\n                <p onClick={() => setcounter(!counter)}>\r\n                    {counter ? \"go to registracia\" : \"go to login\"}\r\n                </p>\r\n                {counter ? login : registracia}\r\n\r\n                {arr.map(\r\n                    (elem: userDataType, i: number): JSX.Element => {\r\n                        return (\r\n                            <div key={elem.id}>\r\n                                <p>{elem.email}</p>\r\n                                <p>{elem.password}</p>\r\n                                <button onClick={deleteUser.bind(null, elem)}>\r\n                                    delete\r\n                                </button>\r\n                            </div>\r\n                        );\r\n                    },\r\n                )}\r\n            </div>\r\n            <p>{message}</p>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Container1 = memo(Container1);\r\n"]},"metadata":{},"sourceType":"module"}